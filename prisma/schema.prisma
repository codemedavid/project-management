// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

enum Role {
  PROJECT_MANAGER
  ADMIN
  EDITOR
  CLIENT
  STUDENT
}

enum ProjectType {
  per_project
  per_hour
}

model Project{
  id Int @id @default(autoincrement())
  title String
  description String
  Platform String?
  Rate Decimal?
  Video_Type String?
  Niche String?
  project_type ProjectType? @default(per_project)
  created_at DateTime @default(now())
  updatedAt DateTime @updatedAt
  tikets Tikets[]
  project_manager_id Int
  project_manager User @relation("ProjectManagerRelation", fields: [project_manager_id], references: [id])  
  editor_id Int
  editor User @relation("EditorRelation", fields: [editor_id], references: [id])
  client_id Int?
  client Client? @relation("ClientRelation", fields: [client_id], references: [id])
}

enum Pipeline {
 Lead
 Cold
 Hot 
 Warm
 Closed
}

model Client{
  id Int @id @default(autoincrement())
  name String
  email String?
  phone String?
  status Pipeline @default(Lead)
  website String?
  created_at DateTime @default(now())
  updatedAt DateTime @updatedAt
  project_manager_id Int
  project_manager User @relation("ClientRelation", fields: [project_manager_id], references: [id])
  project Project[] @relation("ClientRelation")
}


model User {
  id     Int     @id @default(autoincrement())
  name String
  username String @unique
  email String @unique
  password String
  role Role @default(STUDENT)
  team String?
  created_at DateTime @default(now())
  updatedAt DateTime @updatedAt
  editor Tikets[] @relation("EditorRelation")
  project_manager Tikets[] @relation("ProjectManagerRelation")
  project_manager_projects Project[] @relation("ProjectManagerRelation")
  editedProjects Project[] @relation("EditorRelation")
  client Client[] @relation("ClientRelation")
}

model Tikets{
  id Int @id @default(autoincrement())
  code String @unique
  note String?
  url String?
  approval String @default("pending")
  status String @default("pending")
  created_at DateTime @default(now())
  updatedAt DateTime @updatedAt
  project_id Int?
  project Project? @relation(fields: [project_id], references: [id])
  project_manager_id Int
  project_manager User @relation("ProjectManagerRelation", fields: [project_manager_id], references: [id])
  editor_id Int?
  editor User? @relation("EditorRelation", fields: [editor_id], references: [id])
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
